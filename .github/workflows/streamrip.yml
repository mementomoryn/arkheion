name: Streamrip
on:
  workflow_dispatch:
    inputs:
      command:
        description: Choose Streamrip command to run
        required: true
        type: choice
        options:
          - ID
          - URL
          - SEARCH
          - LASTFM
          - CONFIG RESET
        default: URL
      service:
        description: Select music service (only used for search)
        required: true
        type: choice
        options:
          - QOBUZ
          - DEEZER
          - TIDAL
        default: QOBUZ
      query:
        description: Set queries to download
        required: true
        type: string
      quality:
        description: Select downloaded songs quality (quality depends on the source)
        required: false
        type: choice
        options:
          - 4
          - 3
          - 2
          - 1
          - 0
          - AUTO
        default: AUTO
      codec:
        description: Select downloaded songs format
        required: false
        type: choice
        options:
          - FLAC
          - ALAC
          - OGG
          - AAC
          - MP3
          - ORIGINAL
        default: ORIGINAL

permissions:
  actions: write
  contents: read

jobs:
  downloads:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'
      - name: Install python dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install git+https://github.com/nathom/streamrip.git@dev
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install toml-cli
        uses: baptiste0928/cargo-install@v3
        with:
          crate: tomlq
      - name: Set up FFmpeg
        id: setup-ffmpeg
        uses: AnimMouse/setup-ffmpeg@v1
        with:
          version: release
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Assign credentials secrets
        uses: cschleiden/replace-tokens@master
        with:
          tokenPrefix: '[['
          tokenSuffix: ']]'
          files: '["configs/spotdl.json"]'
        env:
          QOBUZ_USER_ID: "${{ secrets.QOBUZ_USER_ID }}"
          QOBUZ_TOKEN: "${{ secrets.QOBUZ_TOKEN }}"
          DEEZER_ARL: "${{ secrets.DEEZER_ARL }}"
      - name: Run command
        env:
          COMMANDS: ${{ inputs.command }}
          SERVICE: ${{ inputs.service }}
          QUERY: ${{ inputs.query }}
          QUALITY: ${{ inputs.quality }}
          CODEC: ${{ inputs.codec }}
        shell: bash
        run: |
          python streamrip_module.py
      - name: Parse tidal credentials from config.toml
        run: |
          echo "$(tq -f configs/streamrip.toml 'tidal.user_id')"
          echo "$(tq -f configs/streamrip.toml 'tidal.access_token')"
          echo "$(tq -f configs/streamrip.toml 'tidal.country_code')"
          echo "$(tq -f configs/streamrip.toml 'tidal.refresh_token')"
          echo "$(tq -f configs/streamrip.toml 'tidal.token_expiry')"
      - name: Generate datetime codes
        id: dt-codes
        shell: bash
        run: |
          echo "dtcode=$(date +%N%s | sed 's/0//g' | cut --complement -c 5-10 | cut -c 3-7)" >> $GITHUB_OUTPUT
      - name: Upload downloads as artifact
        id: artifact
        uses: actions/upload-artifact@v4
        with:
          name: streamrip-downloads-${{ steps.dt-codes.outputs.dtcode }}
          path: music
          if-no-files-found: error
          retention-days: 7
          include-hidden-files: true
      - name: Print artifact info
        shell: bash
        run: |
          echo "[INFO] artifact-id: ${{ steps.artifact.outputs.artifact-id }}"
          echo "[INFO] artifact-url: ${{ steps.artifact.outputs.artifact-url }}"
