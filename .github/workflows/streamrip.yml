name: Streamrip
# Supported sources: Qobuz, Deezer
on:
  workflow_dispatch:
    inputs:
      command:
        description: Choose Streamrip command
        required: true
        type: choice
        options:
          - id
          - url
          - lastfm
          - config reset
      query:
        description: Set tracks query to download
        required: true
        type: string
      quality:
        description: Select tracks quality (quality depends on the source)
        required: false
        type: choice
        options:
          # check https://github.com/nathom/streamrip/wiki/Quality-IDs for supported quality per sources
          - 4 # 24 bit, ≤ 192 kHz (Hi-Res)
          - 3 # 24 bit, ≤ 96 kHz (Hi-Fi / MQA)
          - 2 # 16 bit, 44.1 kHz (CD Quality / Lossless)
          - 1 # 320 kbps (Great)
          - 0 # 128 kbps (Good)
          - config
        default: config
      codec:
        description: Select tracks codec
        required: false
        type: choice
        options:
          - flac
          - alac
          - ogg
          - aac
          - mp3
          - original
        default: original

permissions:
  actions: write
  contents: read

jobs:
  downloads:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'
      - name: Install python dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade streamrip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Set up FFmpeg
        id: setup-ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3.1
        with:
          ffmpeg-version: release
          linking-type: shared
      - name: Run command
        env:
          COMMANDS: ${{ inputs.command }}
          QUERY: ${{ inputs.query }}
          QUALITY: ${{ inputs.quality }}
          CODEC: ${{ inputs.codec }}
        shell: bash
        run: |
          python streamrip_run.py
      - name: Generate datetime codes
        id: dt-codes
        shell: bash
        run: |
          echo "dtcode=$(date +%N%s | sed 's/0//g' | cut --complement -c 5-10 | cut -c 3-7)" >> $GITHUB_OUTPUT
      - name: Upload downloads as artifact
        id: artifact
        uses: actions/upload-artifact@v4
        with:
          name: streamrip-downloads-${{ steps.dt-codes.outputs.dtcode }}
          path: music
          if-no-files-found: error
          retention-days: 7
          include-hidden-files: true
      - name: Print artifact info
        shell: bash
        run: |
          echo "[INFO] artifact-id: ${{ steps.artifact.outputs.artifact-id }}"
          echo "[INFO] artifact-url: ${{ steps.artifact.outputs.artifact-url }}"
